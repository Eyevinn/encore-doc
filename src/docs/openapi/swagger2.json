{
  "swagger": "2.0",
  "info": {
    "contact": {
      "email": "videocore@svt.se",
      "name": "Team Videocore",
      "url": "https://github.com/svt/encore"
    },
    "description": "Endpoints for Encore",
    "license": {
      "name": "EUPL-1.2-or-later",
      "url": "https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12"
    },
    "title": "Encore OpenAPI"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/encoreJobs": {
      "get": {
        "produces": [
          "application/hal+json",
          "text/uri-list",
          "application/x-spring-data-compact+json"
        ],
        "parameters": [
          {
            "default": 0,
            "description": "Zero-based page index (0..N)",
            "in": "query",
            "minimum": 0,
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 20,
            "description": "The size of the page to be returned",
            "in": "query",
            "minimum": 1,
            "name": "size",
            "required": false,
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "sort",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CollectionModelEntityModelEncoreJob"
            }
          }
        },
        "tags": [
          "encorejob"
        ],
        "description": "get-encorejob",
        "operationId": "getCollectionResource-encorejob-get_1"
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/EncoreJob"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/EntityModelEncoreJob"
            }
          }
        },
        "tags": [
          "encorejob"
        ],
        "description": "create-encorejob",
        "operationId": "postCollectionResource-encorejob-post"
      }
    },
    "/encoreJobs/search/findByStatus": {
      "get": {
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "enum": [
              "NEW",
              "QUEUED",
              "IN_PROGRESS",
              "SUCCESSFUL",
              "FAILED",
              "CANCELLED"
            ],
            "in": "query",
            "name": "status",
            "type": "string"
          },
          {
            "default": 0,
            "description": "Zero-based page index (0..N)",
            "in": "query",
            "minimum": 0,
            "name": "page",
            "required": false,
            "type": "integer"
          },
          {
            "default": 20,
            "description": "The size of the page to be returned",
            "in": "query",
            "minimum": 1,
            "name": "size",
            "required": false,
            "type": "integer"
          },
          {
            "collectionFormat": "multi",
            "description": "Sorting criteria in the format: property(,asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "in": "query",
            "items": {
              "type": "string"
            },
            "name": "sort",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PagedModelEncoreJob"
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "encorejob"
        ],
        "description": "Returns EncoreJobs according to the given Status",
        "operationId": "executeSearch-encorejob-get",
        "summary": "Finds EncoreJobs By Status"
      }
    },
    "/encoreJobs/{id}": {
      "delete": {
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "encorejob"
        ],
        "description": "delete-encorejob",
        "operationId": "deleteItemResource-encorejob-delete"
      },
      "get": {
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModelEncoreJob"
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "encorejob"
        ],
        "description": "get-encorejob",
        "operationId": "getItemResource-encorejob-get"
      },
      "patch": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/EncoreJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModelEncoreJob"
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "encorejob"
        ],
        "description": "patch-encorejob",
        "operationId": "patchItemResource-encorejob-patch"
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/EncoreJob"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EntityModelEncoreJob"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/EntityModelEncoreJob"
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "tags": [
          "encorejob"
        ],
        "description": "update-encorejob",
        "operationId": "putItemResource-encorejob-put"
      }
    },
    "/encoreJobs/{jobId}/cancel": {
      "post": {
        "produces": [
          "application/hal+json"
        ],
        "parameters": [
          {
            "format": "uuid",
            "in": "path",
            "name": "jobId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          }
        },
        "tags": [
          "encorejob"
        ],
        "description": "Cancels an EncoreJob with thw given JobId",
        "operationId": "cancel",
        "summary": "Cancel an EncoreJob"
      }
    },
    "/queue": {
      "get": {
        "produces": [
          "application/hal+json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "items": {
                "$ref": "#/definitions/QueueItem"
              },
              "type": "array"
            }
          }
        },
        "tags": [
          "queue"
        ],
        "description": "Returns a list of queues (QueueItems)",
        "operationId": "getQueue",
        "summary": "Get Queues"
      }
    }
  },
  "definitions": {
    "AudioFile": {
      "allOf": [
        {
          "$ref": "#/definitions/MediaFile"
        },
        {
          "properties": {
            "audioStreams": {
              "items": {
                "$ref": "#/definitions/AudioStream"
              },
              "type": "array"
            },
            "duration": {
              "format": "double",
              "type": "number"
            },
            "overallBitrate": {
              "format": "int64",
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "required": [
        "audioStreams",
        "duration",
        "file",
        "fileSize",
        "format",
        "overallBitrate",
        "type"
      ],
      "type": "object"
    },
    "AudioStream": {
      "properties": {
        "bitrate": {
          "format": "int64",
          "type": "integer"
        },
        "channels": {
          "format": "int32",
          "type": "integer"
        },
        "codec": {
          "type": "string"
        },
        "duration": {
          "format": "double",
          "type": "number"
        },
        "format": {
          "type": "string"
        },
        "samplingRate": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "channels"
      ],
      "type": "object"
    },
    "CollectionModelEntityModelEncoreJob": {
      "properties": {
        "_embedded": {
          "properties": {
            "encoreJobs": {
              "items": {
                "$ref": "#/definitions/EntityModelEncoreJob"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "_links": {
          "$ref": "#/definitions/Links"
        }
      },
      "type": "object"
    },
    "EncoreJob": {
      "properties": {
        "completedDate": {
          "description": "The time for when the EncoreJob was completed (fail or success)",
          "example": "2021-04-19T07:20:43.819141+02:00",
          "format": "date-time",
          "readOnly": true,
          "type": "string",
          "x-nullable": true
        },
        "createdDate": {
          "description": "The Creation date for the EncoreJob",
          "example": "2021-04-22T03:00:48.759168+02:00",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "cropTo": {
          "description": "Crop output video to given aspect ratio",
          "example": "1:1",
          "pattern": "^[1-9]\\d*[:/][1-9]\\d*$",
          "type": "string",
          "x-nullable": true
        },
        "dar": {
          "description": "The Display Aspect Ratio to use if the input is anamorphic. Overrides DAR found from input metadata (for corrupt video metadata)",
          "example": "16:9",
          "pattern": "^[1-9]\\d*[:/][1-9]\\d*$",
          "type": "string",
          "x-nullable": true
        },
        "debugOverlay": {
          "default": false,
          "description": "Instruct Encore to overlay encoding metadata on the encoded video stream",
          "type": "boolean"
        },
        "endTime": {
          "description": "Seek in video stream to given end time in ms (start time must currently be given)",
          "example": 20000,
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "externalId": {
          "description": "External id - for external backreference",
          "example": "any-string",
          "type": "string",
          "x-nullable": true
        },
        "filename": {
          "description": "The input file that the EncoreJob should process",
          "example": "/path/to/a/file/file.mxf",
          "type": "string"
        },
        "globalAudioFilters": {
          "default": "[]",
          "description": "List of FFmpeg filters to apply to all audio outputs",
          "example": "to-do",
          "items": {
            "default": "[]",
            "description": "List of FFmpeg filters to apply to all audio outputs",
            "example": "to-do",
            "type": "string"
          },
          "type": "array"
        },
        "globalVideoFilters": {
          "default": "[]",
          "description": "List of FFmpeg filters to apply to all video outputs",
          "example": "proxy=filter_path=/ffmpeg-filters/libsvg_filter.so:config='svg=/path/logo-white.svg",
          "items": {
            "default": "[]",
            "description": "List of FFmpeg filters to apply to all video outputs",
            "example": "proxy=filter_path=/ffmpeg-filters/libsvg_filter.so:config='svg=/path/logo-white.svg",
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "description": "The Encore Internal EncoreJob Identity",
          "example": "fb2baa17-8972-451b-bb1e-1bc773283476",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "input": {
          "$ref": "#/definitions/VideoFile"
        },
        "logContext": {
          "additionalProperties": {
            "default": "{}",
            "description": "Key/Values to append to the MDC log context",
            "type": "string"
          },
          "default": "{}",
          "description": "Key/Values to append to the MDC log context",
          "type": "object"
        },
        "message": {
          "description": "The exception message, if the EncoreJob failed",
          "example": "input/output error",
          "readOnly": true,
          "type": "string",
          "x-nullable": true
        },
        "output": {
          "description": "Analyzed models of the output files",
          "items": {},
          "readOnly": true,
          "type": "array"
        },
        "outputFolder": {
          "description": "A directory path to where the output should be written",
          "example": "/an/output/path/dir",
          "type": "string"
        },
        "padTo": {
          "description": "Pad output video to given aspect ratio",
          "example": "16:9",
          "pattern": "^[1-9]\\d*[:/][1-9]\\d*$",
          "type": "string",
          "x-nullable": true
        },
        "priority": {
          "default": 0,
          "description": "The queue priority of the EncoreJob",
          "format": "int32",
          "maximum": 100,
          "minimum": 0,
          "type": "integer"
        },
        "profile": {
          "description": "The name of the encoding profile to use",
          "example": "x264-animated",
          "type": "string"
        },
        "progress": {
          "default": 0,
          "description": "The EncoreJob progress",
          "example": 57,
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "progressCallbackUri": {
          "description": "An url to which the progress status callback should be directed",
          "example": "http://projectx/encorecallback",
          "format": "uri",
          "type": "string",
          "x-nullable": true
        },
        "speed": {
          "description": "The Encoding speed of the job (compared to it's play speed/input duration)",
          "example": 0.334,
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-nullable": true
        },
        "startTime": {
          "description": "Seek in video stream to given start time in ms (end time must currently be given)",
          "example": 10000,
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "startedDate": {
          "description": "The time for when the EncoreJob was picked from the queue)",
          "example": "2021-04-19T07:20:43.819141+02:00",
          "format": "date-time",
          "readOnly": true,
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "description": "The Job Status",
          "enum": [
            "NEW",
            "QUEUED",
            "IN_PROGRESS",
            "SUCCESSFUL",
            "FAILED",
            "CANCELLED"
          ],
          "readOnly": true,
          "type": "string"
        },
        "thumbnailTime": {
          "description": "Time in ms for when the thumbnail should be picked. Overrides profile configuration for thumbnails",
          "example": 5000,
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "useFirstAudioStreams": {
          "description": "Only the audio input streams up to the given value",
          "example": 2,
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        }
      },
      "required": [
        "createdDate",
        "debugOverlay",
        "filename",
        "globalAudioFilters",
        "globalVideoFilters",
        "id",
        "logContext",
        "output",
        "outputFolder",
        "priority",
        "profile",
        "progress",
        "status"
      ],
      "type": "object"
    },
    "EntityModelEncoreJob": {
      "properties": {
        "_links": {
          "$ref": "#/definitions/Links"
        },
        "completedDate": {
          "description": "The time for when the EncoreJob was completed (fail or success)",
          "example": "2021-04-19T07:20:43.819141+02:00",
          "format": "date-time",
          "readOnly": true,
          "type": "string",
          "x-nullable": true
        },
        "createdDate": {
          "description": "The Creation date for the EncoreJob",
          "example": "2021-04-22T03:00:48.759168+02:00",
          "format": "date-time",
          "readOnly": true,
          "type": "string"
        },
        "cropTo": {
          "description": "Crop output video to given aspect ratio",
          "example": "1:1",
          "pattern": "^[1-9]\\d*[:/][1-9]\\d*$",
          "type": "string",
          "x-nullable": true
        },
        "dar": {
          "description": "The Display Aspect Ratio to use if the input is anamorphic. Overrides DAR found from input metadata (for corrupt video metadata)",
          "example": "16:9",
          "pattern": "^[1-9]\\d*[:/][1-9]\\d*$",
          "type": "string",
          "x-nullable": true
        },
        "debugOverlay": {
          "default": false,
          "description": "Instruct Encore to overlay encoding metadata on the encoded video stream",
          "type": "boolean"
        },
        "endTime": {
          "description": "Seek in video stream to given end time in ms (start time must currently be given)",
          "example": 20000,
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "externalId": {
          "description": "External id - for external backreference",
          "example": "any-string",
          "type": "string",
          "x-nullable": true
        },
        "filename": {
          "description": "The input file that the EncoreJob should process",
          "example": "/path/to/a/file/file.mxf",
          "type": "string"
        },
        "globalAudioFilters": {
          "default": "[]",
          "description": "List of FFmpeg filters to apply to all audio outputs",
          "example": "to-do",
          "items": {
            "default": "[]",
            "description": "List of FFmpeg filters to apply to all audio outputs",
            "example": "to-do",
            "type": "string"
          },
          "type": "array"
        },
        "globalVideoFilters": {
          "default": "[]",
          "description": "List of FFmpeg filters to apply to all video outputs",
          "example": "proxy=filter_path=/ffmpeg-filters/libsvg_filter.so:config='svg=/path/logo-white.svg",
          "items": {
            "default": "[]",
            "description": "List of FFmpeg filters to apply to all video outputs",
            "example": "proxy=filter_path=/ffmpeg-filters/libsvg_filter.so:config='svg=/path/logo-white.svg",
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "description": "The Encore Internal EncoreJob Identity",
          "example": "fb2baa17-8972-451b-bb1e-1bc773283476",
          "format": "uuid",
          "readOnly": true,
          "type": "string"
        },
        "input": {
          "$ref": "#/definitions/VideoFile"
        },
        "logContext": {
          "additionalProperties": {
            "default": "{}",
            "description": "Key/Values to append to the MDC log context",
            "type": "string"
          },
          "default": "{}",
          "description": "Key/Values to append to the MDC log context",
          "type": "object"
        },
        "message": {
          "description": "The exception message, if the EncoreJob failed",
          "example": "input/output error",
          "readOnly": true,
          "type": "string",
          "x-nullable": true
        },
        "output": {
          "description": "Analyzed models of the output files",
          "items": {
            "$ref": "#/definitions/MediaFile"
          },
          "readOnly": true,
          "type": "array"
        },
        "outputFolder": {
          "description": "A directory path to where the output should be written",
          "example": "/an/output/path/dir",
          "type": "string"
        },
        "padTo": {
          "description": "Pad output video to given aspect ratio",
          "example": "16:9",
          "pattern": "^[1-9]\\d*[:/][1-9]\\d*$",
          "type": "string",
          "x-nullable": true
        },
        "priority": {
          "default": 0,
          "description": "The queue priority of the EncoreJob",
          "format": "int32",
          "maximum": 100,
          "minimum": 0,
          "type": "integer"
        },
        "profile": {
          "description": "The name of the encoding profile to use",
          "example": "x264-animated",
          "type": "string"
        },
        "progress": {
          "default": 0,
          "description": "The EncoreJob progress",
          "example": 57,
          "format": "int32",
          "readOnly": true,
          "type": "integer"
        },
        "progressCallbackUri": {
          "description": "An url to which the progress status callback should be directed",
          "example": "http://projectx/encorecallback",
          "format": "uri",
          "type": "string",
          "x-nullable": true
        },
        "speed": {
          "description": "The Encoding speed of the job (compared to it's play speed/input duration)",
          "example": 0.334,
          "format": "double",
          "readOnly": true,
          "type": "number",
          "x-nullable": true
        },
        "startTime": {
          "description": "Seek in video stream to given start time in ms (end time must currently be given)",
          "example": 10000,
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "startedDate": {
          "description": "The time for when the EncoreJob was picked from the queue)",
          "example": "2021-04-19T07:20:43.819141+02:00",
          "format": "date-time",
          "readOnly": true,
          "type": "string",
          "x-nullable": true
        },
        "status": {
          "description": "The Job Status",
          "enum": [
            "NEW",
            "QUEUED",
            "IN_PROGRESS",
            "SUCCESSFUL",
            "FAILED",
            "CANCELLED"
          ],
          "readOnly": true,
          "type": "string"
        },
        "thumbnailTime": {
          "description": "Time in ms for when the thumbnail should be picked. Overrides profile configuration for thumbnails",
          "example": 5000,
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        },
        "useFirstAudioStreams": {
          "description": "Only the audio input streams up to the given value",
          "example": 2,
          "format": "int32",
          "type": "integer",
          "x-nullable": true
        }
      },
      "type": "object"
    },
    "ImageFile": {
      "allOf": [
        {
          "$ref": "#/definitions/MediaFile"
        },
        {
          "properties": {
            "height": {
              "format": "int32",
              "type": "integer"
            },
            "width": {
              "format": "int32",
              "type": "integer"
            }
          },
          "type": "object"
        }
      ],
      "required": [
        "file",
        "fileSize",
        "format",
        "height",
        "type",
        "width"
      ],
      "type": "object"
    },
    "Link": {
      "properties": {
        "deprecation": {
          "type": "string"
        },
        "href": {
          "type": "string"
        },
        "hreflang": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "profile": {
          "type": "string"
        },
        "templated": {
          "type": "boolean"
        },
        "title": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "Links": {
      "additionalProperties": {
        "$ref": "#/definitions/Link"
      },
      "type": "object"
    },
    "MediaFile": {
      "description": "Analyzed models of the output files",
      "discriminator": "type",
      "properties": {
        "file": {
          "type": "string"
        },
        "fileSize": {
          "format": "int64",
          "type": "integer"
        },
        "format": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "readOnly": true,
      "required": [
        "file",
        "fileSize",
        "format",
        "type"
      ],
      "type": "object"
    },
    "PageMetadata": {
      "properties": {
        "number": {
          "format": "int64",
          "type": "integer"
        },
        "size": {
          "format": "int64",
          "type": "integer"
        },
        "totalElements": {
          "format": "int64",
          "type": "integer"
        },
        "totalPages": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "PagedModelEncoreJob": {
      "properties": {
        "_embedded": {
          "properties": {
            "encoreJobs": {
              "items": {
                "$ref": "#/definitions/EncoreJob"
              },
              "type": "array"
            }
          },
          "type": "object"
        },
        "_links": {
          "$ref": "#/definitions/Links"
        },
        "page": {
          "$ref": "#/definitions/PageMetadata"
        }
      },
      "type": "object"
    },
    "QueueItem": {
      "properties": {
        "created": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "priority": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "created",
        "id",
        "priority"
      ],
      "type": "object"
    },
    "SubtitleFile": {
      "allOf": [
        {
          "$ref": "#/definitions/MediaFile"
        }
      ],
      "required": [
        "file",
        "fileSize",
        "format",
        "type"
      ],
      "type": "object"
    },
    "VideoFile": {
      "allOf": [
        {
          "$ref": "#/definitions/MediaFile"
        },
        {
          "properties": {
            "audioStreams": {
              "items": {
                "$ref": "#/definitions/AudioStream"
              },
              "type": "array"
            },
            "duration": {
              "format": "double",
              "type": "number"
            },
            "overallBitrate": {
              "format": "int64",
              "type": "integer"
            },
            "videoStreams": {
              "items": {
                "$ref": "#/definitions/VideoStream"
              },
              "type": "array"
            }
          },
          "type": "object"
        }
      ],
      "required": [
        "audioStreams",
        "duration",
        "file",
        "fileSize",
        "format",
        "overallBitrate",
        "type",
        "videoStreams"
      ],
      "type": "object"
    },
    "VideoStream": {
      "properties": {
        "bitDepth": {
          "format": "int32",
          "type": "integer"
        },
        "bitrate": {
          "format": "int64",
          "type": "integer"
        },
        "codec": {
          "type": "string"
        },
        "displayAspectRatio": {
          "type": "string"
        },
        "duration": {
          "format": "double",
          "type": "number"
        },
        "format": {
          "type": "string"
        },
        "frameRate": {
          "type": "string"
        },
        "height": {
          "format": "int32",
          "type": "integer"
        },
        "isInterlaced": {
          "type": "boolean"
        },
        "level": {
          "type": "string"
        },
        "numFrames": {
          "format": "int32",
          "type": "integer"
        },
        "pixelFormat": {
          "type": "string"
        },
        "profile": {
          "type": "string"
        },
        "sampleAspectRatio": {
          "type": "string"
        },
        "transferCharacteristics": {
          "type": "string"
        },
        "width": {
          "format": "int32",
          "type": "integer"
        }
      },
      "required": [
        "codec",
        "duration",
        "frameRate",
        "height",
        "isInterlaced",
        "numFrames",
        "width"
      ],
      "type": "object"
    }
  },
  "x-components": {}
}
